// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BorrowerRegistered extends ethereum.Event {
  get params(): BorrowerRegistered__Params {
    return new BorrowerRegistered__Params(this);
  }
}

export class BorrowerRegistered__Params {
  _event: BorrowerRegistered;

  constructor(event: BorrowerRegistered) {
    this._event = event;
  }

  get addedBorrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BorrowerRemoved extends ethereum.Event {
  get params(): BorrowerRemoved__Params {
    return new BorrowerRemoved__Params(this);
  }
}

export class BorrowerRemoved__Params {
  _event: BorrowerRemoved;

  constructor(event: BorrowerRemoved) {
    this._event = event;
  }

  get removedBorrower(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BorrowerRequestAccepted extends ethereum.Event {
  get params(): BorrowerRequestAccepted__Params {
    return new BorrowerRequestAccepted__Params(this);
  }
}

export class BorrowerRequestAccepted__Params {
  _event: BorrowerRequestAccepted;

  constructor(event: BorrowerRequestAccepted) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get lender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get startingTimeStamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BorrowerRequestAdded extends ethereum.Event {
  get params(): BorrowerRequestAdded__Params {
    return new BorrowerRequestAdded__Params(this);
  }
}

export class BorrowerRequestAdded__Params {
  _event: BorrowerRequestAdded;

  constructor(event: BorrowerRequestAdded) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get borrower(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timeStampDuration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BorrowerRequestCompleted extends ethereum.Event {
  get params(): BorrowerRequestCompleted__Params {
    return new BorrowerRequestCompleted__Params(this);
  }
}

export class BorrowerRequestCompleted__Params {
  _event: BorrowerRequestCompleted;

  constructor(event: BorrowerRequestCompleted) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class BorrowerRequestReported extends ethereum.Event {
  get params(): BorrowerRequestReported__Params {
    return new BorrowerRequestReported__Params(this);
  }
}

export class BorrowerRequestReported__Params {
  _event: BorrowerRequestReported;

  constructor(event: BorrowerRequestReported) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class Lending__borrowRequestResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: i32;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set(
      "value5",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value5))
    );
    return map;
  }
}

export class Lending extends ethereum.SmartContract {
  static bind(address: Address): Lending {
    return new Lending("Lending", address);
  }

  borrowRequest(param0: Bytes): Lending__borrowRequestResult {
    let result = super.call(
      "borrowRequest",
      "borrowRequest(bytes32):(address,address,uint256,uint256,uint256,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new Lending__borrowRequestResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toI32()
    );
  }

  try_borrowRequest(
    param0: Bytes
  ): ethereum.CallResult<Lending__borrowRequestResult> {
    let result = super.tryCall(
      "borrowRequest",
      "borrowRequest(bytes32):(address,address,uint256,uint256,uint256,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Lending__borrowRequestResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toI32()
      )
    );
  }

  borrowRequestId(param0: Address, param1: BigInt): Bytes {
    let result = super.call(
      "borrowRequestId",
      "borrowRequestId(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBytes();
  }

  try_borrowRequestId(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "borrowRequestId",
      "borrowRequestId(address,uint256):(bytes32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  borrower(param0: Address): boolean {
    let result = super.call("borrower", "borrower(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_borrower(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("borrower", "borrower(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  borrowerReported(param0: Address): boolean {
    let result = super.call(
      "borrowerReported",
      "borrowerReported(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_borrowerReported(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "borrowerReported",
      "borrowerReported(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  borrowerinDebt(param0: Address): boolean {
    let result = super.call(
      "borrowerinDebt",
      "borrowerinDebt(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_borrowerinDebt(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "borrowerinDebt",
      "borrowerinDebt(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  borrowingIntrest(): BigInt {
    let result = super.call(
      "borrowingIntrest",
      "borrowingIntrest():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_borrowingIntrest(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "borrowingIntrest",
      "borrowingIntrest():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  registrationCollateral(): BigInt {
    let result = super.call(
      "registrationCollateral",
      "registrationCollateral():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_registrationCollateral(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "registrationCollateral",
      "registrationCollateral():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenAddress(): Address {
    let result = super.call("tokenAddress", "tokenAddress():(address)", []);

    return result[0].toAddress();
  }

  try_tokenAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenAddress", "tokenAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _collateral(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _intrest(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptRequestCall extends ethereum.Call {
  get inputs(): AcceptRequestCall__Inputs {
    return new AcceptRequestCall__Inputs(this);
  }

  get outputs(): AcceptRequestCall__Outputs {
    return new AcceptRequestCall__Outputs(this);
  }
}

export class AcceptRequestCall__Inputs {
  _call: AcceptRequestCall;

  constructor(call: AcceptRequestCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class AcceptRequestCall__Outputs {
  _call: AcceptRequestCall;

  constructor(call: AcceptRequestCall) {
    this._call = call;
  }
}

export class ReportBorrowerCall extends ethereum.Call {
  get inputs(): ReportBorrowerCall__Inputs {
    return new ReportBorrowerCall__Inputs(this);
  }

  get outputs(): ReportBorrowerCall__Outputs {
    return new ReportBorrowerCall__Outputs(this);
  }
}

export class ReportBorrowerCall__Inputs {
  _call: ReportBorrowerCall;

  constructor(call: ReportBorrowerCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ReportBorrowerCall__Outputs {
  _call: ReportBorrowerCall;

  constructor(call: ReportBorrowerCall) {
    this._call = call;
  }
}

export class PayBackLenderCall extends ethereum.Call {
  get inputs(): PayBackLenderCall__Inputs {
    return new PayBackLenderCall__Inputs(this);
  }

  get outputs(): PayBackLenderCall__Outputs {
    return new PayBackLenderCall__Outputs(this);
  }
}

export class PayBackLenderCall__Inputs {
  _call: PayBackLenderCall;

  constructor(call: PayBackLenderCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PayBackLenderCall__Outputs {
  _call: PayBackLenderCall;

  constructor(call: PayBackLenderCall) {
    this._call = call;
  }
}

export class RegisterAsBorrowerCall extends ethereum.Call {
  get inputs(): RegisterAsBorrowerCall__Inputs {
    return new RegisterAsBorrowerCall__Inputs(this);
  }

  get outputs(): RegisterAsBorrowerCall__Outputs {
    return new RegisterAsBorrowerCall__Outputs(this);
  }
}

export class RegisterAsBorrowerCall__Inputs {
  _call: RegisterAsBorrowerCall;

  constructor(call: RegisterAsBorrowerCall) {
    this._call = call;
  }
}

export class RegisterAsBorrowerCall__Outputs {
  _call: RegisterAsBorrowerCall;

  constructor(call: RegisterAsBorrowerCall) {
    this._call = call;
  }
}

export class RemovedAsBorrowerCall extends ethereum.Call {
  get inputs(): RemovedAsBorrowerCall__Inputs {
    return new RemovedAsBorrowerCall__Inputs(this);
  }

  get outputs(): RemovedAsBorrowerCall__Outputs {
    return new RemovedAsBorrowerCall__Outputs(this);
  }
}

export class RemovedAsBorrowerCall__Inputs {
  _call: RemovedAsBorrowerCall;

  constructor(call: RemovedAsBorrowerCall) {
    this._call = call;
  }
}

export class RemovedAsBorrowerCall__Outputs {
  _call: RemovedAsBorrowerCall;

  constructor(call: RemovedAsBorrowerCall) {
    this._call = call;
  }
}

export class RequestFundsToBorrowCall extends ethereum.Call {
  get inputs(): RequestFundsToBorrowCall__Inputs {
    return new RequestFundsToBorrowCall__Inputs(this);
  }

  get outputs(): RequestFundsToBorrowCall__Outputs {
    return new RequestFundsToBorrowCall__Outputs(this);
  }
}

export class RequestFundsToBorrowCall__Inputs {
  _call: RequestFundsToBorrowCall;

  constructor(call: RequestFundsToBorrowCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _duration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RequestFundsToBorrowCall__Outputs {
  _call: RequestFundsToBorrowCall;

  constructor(call: RequestFundsToBorrowCall) {
    this._call = call;
  }
}
